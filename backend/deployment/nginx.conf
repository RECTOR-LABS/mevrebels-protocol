# MEVrebels Backend - Nginx Configuration
# Place this file at: /etc/nginx/sites-available/mevrebels-api
# Create symlink: sudo ln -s /etc/nginx/sites-available/mevrebels-api /etc/nginx/sites-enabled/

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;

# API Server (HTTP REST API)
upstream api_server_http {
    least_conn;
    server localhost:3011 max_fails=3 fail_timeout=30s;
}

# API Server (WebSocket)
upstream api_server_ws {
    least_conn;
    server localhost:3012 max_fails=3 fail_timeout=30s;
}

# Transaction Monitor (Webhook Receiver)
upstream transaction_monitor {
    server localhost:3003 max_fails=3 fail_timeout=30s;
}

# Analytics Service
upstream analytics_service {
    server localhost:3014 max_fails=3 fail_timeout=30s;
}

# HTTP server (redirect to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name api.mevrebels.rectorspace.com;

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.mevrebels.rectorspace.com;

    # SSL certificates (will be generated by Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/api.mevrebels.rectorspace.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.mevrebels.rectorspace.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.mevrebels.rectorspace.com/chain.pem;

    # SSL configuration (Mozilla Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers (adjust origins as needed)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;

    # Handle OPTIONS preflight
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Logging
    access_log /var/log/nginx/mevrebels-api-access.log;
    error_log /var/log/nginx/mevrebels-api-error.log;

    # Client body size
    client_max_body_size 10M;

    # REST API endpoints
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://api_server_http/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket endpoint
    location /ws {
        proxy_pass http://api_server_ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Transaction Monitor webhook endpoint
    location /webhook/ {
        # No rate limiting for webhooks (authenticated via signature)
        proxy_pass http://transaction_monitor/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Preserve webhook headers
        proxy_pass_request_headers on;
    }

    # Analytics Service endpoints
    location /analytics/ {
        limit_req zone=api_limit burst=10 nodelay;

        proxy_pass http://analytics_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint (no auth, no rate limit)
    location /health {
        proxy_pass http://api_server_http;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Root (API documentation or status page)
    location / {
        proxy_pass http://api_server_http;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
